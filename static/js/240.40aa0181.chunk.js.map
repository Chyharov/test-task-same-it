{"version":3,"file":"static/js/240.40aa0181.chunk.js","mappings":"kPAwBA,EAtBsB,SAAC,GAAqD,IAAnDA,EAAkD,EAAlDA,QAASC,EAAyC,EAAzCA,eAAgBC,EAAyB,EAAzBA,mBAChD,OACE,4BACE,2CACCF,EAAQG,OAAS,GAChB,4BACE,mBAAQC,QAASH,EAAjB,4BACA,wBACGD,EAAQK,KAAI,SAACC,EAAMC,GAAP,OACX,eAAgBH,QAAS,kBAAMF,EAAmBI,EAAzB,EAAzB,SACGA,GADMC,EADE,UAQjB,0DAIP,ECrBD,EAA8B,kCAA9B,EAA6E,iCAA7E,EAA+H,qCCsE/H,EAlEqB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,uBACtB,GAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAoCF,EAAAA,EAAAA,WAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAA0CJ,EAAAA,EAAAA,UAAS,IAAnD,eAAOK,EAAP,KAAsBC,EAAtB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgBC,aAAaC,QAAQ,iBACvCF,GACFF,EAAiBK,KAAKC,MAAMJ,GAE/B,GAAE,IAEH,IAAMK,EAA6B,SAACC,GAClC,IACMC,EADaD,EAAME,OAAOC,MACAC,QAAQ,MAAO,IAC/ChB,EAAkBa,GAEU,KAAxBA,EAAarB,OACfU,GAAc,GAEdA,GAAc,EAEjB,EAEKe,EAAY,mCAAG,WAAOC,GAAP,4EACnBA,EAAEC,kBAEElB,EAHe,iCAIUmB,EAAAA,EAAAA,IAAgBrB,GAJ1B,OAIXsB,EAJW,OAKjBxB,EAAuBwB,GACjBC,GANW,OAMM,IAAIC,IAAJ,kBAAYpB,GAAZ,CAA2BJ,MAClDK,EAAiBkB,GACjBf,aAAaiB,QAAQ,gBAAiBf,KAAKgB,UAAUH,IARpC,2CAAH,sDAuBlB,OACE,qBAASI,UAAWC,EAApB,WACE,kBAAMD,UAAWC,EAAcC,SAAUX,EAAzC,WACE,kBACEY,KAAK,OACLd,MAAOhB,EACP+B,SAAUnB,EACVoB,YAAY,0BAEa,KAA1BhC,EAAeP,SAAiB,6KACjC,mBAAQkC,UAAWC,EAAkBE,KAAK,SAASG,UAAW/B,EAA9D,gCAEF,SAAC,EAAD,CAAeZ,QAASc,EACtBb,eAxBqB,WACzBc,EAAiB,IACjBG,aAAa0B,WAAW,gBACzB,EAsBK1C,mBApByB,SAACI,GAC9BK,EAAkBL,GAClBgB,EAA2B,CAAEG,OAAQ,CAAEC,MAAOpB,KAC9CsB,EAAa,IAAIiB,MAAM,UACxB,MAmBF,EC1CD,EAzBwB,SAAC,GAAsB,IAApBb,EAAmB,EAAnBA,aAEzB,IAAKA,EACH,OAAO,KAGT,IAAQc,EAASd,EAATc,KAER,IAAKA,GAAwB,IAAhBA,EAAK3C,OAChB,OAAO,0EAGT,IAAM4C,EAAkBD,EAAK,GAE7B,OACE,0BACE,2BACE,yBAAI,mHAAqBC,EAAgBC,aACzC,yBAAI,gGAAiBD,EAAgBE,WAAjC,KAA+CF,EAAgBG,sBACnE,yBAAI,8EAAcH,EAAgBI,cAA9B,KAA+CJ,EAAgBK,4BAI1E,E,SCCD,EArBiB,WACf,OAAwC3C,EAAAA,EAAAA,UAAS,MAAjD,eAAOuB,EAAP,KAAqBqB,EAArB,KAKA,OACE,iCACE,SAACC,EAAA,EAAD,KACA,2BACE,iBAAKjB,UAAU,YAAf,WACE,SAAC,EAAD,CAAc7B,uBARa,SAAC+C,GAClCF,EAAgBE,EACjB,KAOO,SAAC,EAAD,CAAiBvB,aAAcA,WAKxC,C","sources":["components/SearchHistory/SearchHistory.jsx","webpack://test-task-same-it/./src/components/TrackingForm/TrackingForm.module.scss?30d2","components/TrackingForm/TrackingForm.jsx","components/TrackingResults/TrackingResults.jsx","pages/MainPage/MainPage.jsx"],"sourcesContent":["import React from 'react';\n\nconst SearchHistory = ({ history, onClearHistory, onHistoryItemClick }) => {\n  return (\n    <div>\n      <h2>Search History</h2>\n      {history.length > 0 ? (\n        <div>\n          <button onClick={onClearHistory}>Clear History</button>\n          <ul>\n            {history.map((item, index) => (\n              <li key={index} onClick={() => onHistoryItemClick(item)}>\n                {item}\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <p>No search history available.</p>\n      )}\n    </div>\n  );\n};\n\nexport default SearchHistory;","// extracted by mini-css-extract-plugin\nexport default {\"sectionForm\":\"TrackingForm_sectionForm__kUpX2\",\"formSearch\":\"TrackingForm_formSearch__mmjfW\",\"button__submit\":\"TrackingForm_button__submit__GMJkc\"};","import React, { useState, useEffect } from 'react';\nimport { getTrackingInfo } from '../../services/Api';\nimport SearchHistory from 'components/SearchHistory/SearchHistory';\nimport s from './TrackingForm.module.scss'\n\nconst TrackingForm = ({ onTrackingInfoReceived }) => {\n  const [trackingNumber, setTrackingNumber] = useState('');\n  const [validInput, setValidInput] = useState(false);\n  const [searchHistory, setSearchHistory] = useState([]);\n\n  useEffect(() => {\n    const storedHistory = localStorage.getItem('searchHistory');\n    if (storedHistory) {\n      setSearchHistory(JSON.parse(storedHistory));\n    }\n  }, []);\n\n  const handleTrackingNumberChange = (event) => {\n    const inputValue = event.target.value;\n    const numericValue = inputValue.replace(/\\D/g, '');\n    setTrackingNumber(numericValue);\n\n    if (numericValue.length === 14) {\n      setValidInput(true);\n    } else {\n      setValidInput(false);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (validInput) {\n      const trackingInfo = await getTrackingInfo(trackingNumber);\n      onTrackingInfoReceived(trackingInfo);\n      const newHistory = [...new Set([...searchHistory, trackingNumber])];\n      setSearchHistory(newHistory);\n      localStorage.setItem('searchHistory', JSON.stringify(newHistory));\n    }\n  };\n\n  const handleClearHistory = () => {\n    setSearchHistory([]);\n    localStorage.removeItem('searchHistory');\n  };\n\n  const handleHistoryItemClick = (item) => {\n    setTrackingNumber(item);\n    handleTrackingNumberChange({ target: { value: item } });\n    handleSubmit(new Event('submit'));\n  };\n\n  return (\n    <section className={s.sectionForm}>\n      <form className={s.formSearch} onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={trackingNumber}\n          onChange={handleTrackingNumberChange}\n          placeholder=\"Enter tracking number\"\n        />\n        {trackingNumber.length !== 14 && <p>введіть 14 цифр вашої посилки</p>}\n        <button className={s.button__submit} type=\"submit\" disabled={!validInput}>Get status TTN</button>\n      </form>\n      <SearchHistory history={searchHistory}\n        onClearHistory={handleClearHistory}\n        onHistoryItemClick={handleHistoryItemClick} />\n    </section>\n  );\n};\n\nexport default TrackingForm;","import React from 'react';\n\nconst TrackingResults = ({ trackingInfo }) => {\n\n  if (!trackingInfo) {\n    return null;\n  }\n\n  const { data } = trackingInfo;\n\n  if (!data || data.length === 0) {\n    return <p>No tracking information found for this number.</p>;\n  }\n\n  const trackingDetails = data[0];\n\n  return (\n    <div>\n      <ul>\n        <li><p>Статус доставки: {trackingDetails.Status}</p></li>\n        <li><p>Відправлено: {trackingDetails.CitySender}, {trackingDetails.WarehouseSender}</p></li>\n        <li><p>Отримано: {trackingDetails.CityRecipient}, {trackingDetails.WarehouseRecipient}</p></li>\n      </ul>\n    </div>\n  );\n};\n\nexport default TrackingResults;\n","import React, { useState } from 'react';\nimport TrackingForm from 'components/TrackingForm/TrackingForm';\nimport TrackingResults from 'components/TrackingResults/TrackingResults';\nimport Header from 'components/Header/Header';\n\nconst MainPage = () => {\n  const [trackingInfo, setTrackingInfo] = useState(null);\n\n  const handleTrackingInfoReceived = (info) => {\n    setTrackingInfo(info);\n  };\n  return (\n    <>\n      <Header />\n      <main>\n        <div className='container'>\n          <TrackingForm onTrackingInfoReceived={handleTrackingInfoReceived} />\n          <TrackingResults trackingInfo={trackingInfo} />\n        </div>\n      </main>\n    </>\n  );\n};\n\n\n\nexport default MainPage;"],"names":["history","onClearHistory","onHistoryItemClick","length","onClick","map","item","index","onTrackingInfoReceived","useState","trackingNumber","setTrackingNumber","validInput","setValidInput","searchHistory","setSearchHistory","useEffect","storedHistory","localStorage","getItem","JSON","parse","handleTrackingNumberChange","event","numericValue","target","value","replace","handleSubmit","e","preventDefault","getTrackingInfo","trackingInfo","newHistory","Set","setItem","stringify","className","s","onSubmit","type","onChange","placeholder","disabled","removeItem","Event","data","trackingDetails","Status","CitySender","WarehouseSender","CityRecipient","WarehouseRecipient","setTrackingInfo","Header","info"],"sourceRoot":""}