{"version":3,"file":"static/js/301.550e0222.chunk.js","mappings":"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","sources":["webpack://test-task-same-it/./src/components/Header/Header.module.scss?6eb7","components/Header/Header.jsx","services/Api.js","components/SearchHistory/SearchHistory.jsx","components/TrackingForm/TrackingForm.jsx","components/TrackingResults/TrackingResults.jsx","pages/MainPage/MainPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"header__title\":\"Header_header__title__zG0D0\"};","import s from './Header.module.scss';\n\nconst Header = () => {\n  return (\n    <header className={s.header}>\n      <div className={'container ' + s.header__padding}>\n\n        <h1 className={s.header__title}>Header</h1>\n        \n      </div>\n    </header>\n  )\n};\n\nexport default Header;\n","import axios from 'axios';\n\nconst API_KEY = 'cfd822868f3c257a0d180413d03f97e2';\n\nconst API_URL = 'https://api.novaposhta.ua/v2.0/json/';\n\nexport const getTrackingInfo = async (trackingNumber) => {\n    try {\n    const response = await axios.post(\n      API_URL,\n      {\n        apiKey: API_KEY,\n        modelName: 'TrackingDocument',\n        calledMethod: 'getStatusDocuments',\n        methodProperties: {\n          Documents: [\n            {\n              DocumentNumber: trackingNumber,\n              Phone: '',\n            },\n          ],\n        },\n      }\n      );\n\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching tracking info:', error);\n    return null;\n  }\n};\n","import React from 'react';\n\nconst SearchHistory = ({ history, onClearHistory, onHistoryItemClick }) => {\n  return (\n    <div>\n      <h2>Search History</h2>\n      {history.length > 0 ? (\n        <div>\n          <button onClick={onClearHistory}>Clear History</button>\n          <ul>\n            {history.map((item, index) => (\n              <li key={index} onClick={() => onHistoryItemClick(item)}>\n                {item}\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <p>No search history available.</p>\n      )}\n    </div>\n  );\n};\n\nexport default SearchHistory;","import React, { useState, useEffect } from 'react';\nimport { getTrackingInfo } from '../../services/Api';\nimport SearchHistory from 'components/SearchHistory/SearchHistory';\n\nconst TrackingForm = ({ onTrackingInfoReceived }) => {\n  const [trackingNumber, setTrackingNumber] = useState('');\n  const [validInput, setValidInput] = useState(false);\n  const [searchHistory, setSearchHistory] = useState([]);\n\n  useEffect(() => {\n    const storedHistory = localStorage.getItem('searchHistory');\n    if (storedHistory) {\n      setSearchHistory(JSON.parse(storedHistory));\n    }\n  }, []);\n\n  const handleTrackingNumberChange = (event) => {\n    const inputValue = event.target.value;\n    const numericValue = inputValue.replace(/\\D/g, '');\n    setTrackingNumber(numericValue);\n\n    if (numericValue.length === 14) {\n      setValidInput(true);\n    } else {\n      setValidInput(false);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (validInput) {\n      const trackingInfo = await getTrackingInfo(trackingNumber);\n      onTrackingInfoReceived(trackingInfo);\n      const newHistory = [...new Set([...searchHistory, trackingNumber])];\n      setSearchHistory(newHistory);\n      localStorage.setItem('searchHistory', JSON.stringify(newHistory));\n    }\n  };\n\n  const handleClearHistory = () => {\n    setSearchHistory([]);\n    localStorage.removeItem('searchHistory');\n  };\n\n  const handleHistoryItemClick = (item) => {\n    setTrackingNumber(item);\n    handleTrackingNumberChange({ target: { value: item } });\n    handleSubmit(new Event('submit'));\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={trackingNumber}\n          onChange={handleTrackingNumberChange}\n          placeholder=\"Enter tracking number\"\n        />\n        <button type=\"submit\" disabled={!validInput}>Get status TTN</button>\n        {trackingNumber.length !== 14 && <p>введіть 14 цифр вашої посилки</p>}\n      </form>\n      <SearchHistory history={searchHistory}\n        onClearHistory={handleClearHistory}\n        onHistoryItemClick={handleHistoryItemClick} />\n    </div>\n  );\n};\n\nexport default TrackingForm;","import React from 'react';\n\nconst TrackingResults = ({ trackingInfo }) => {\n    console.log(trackingInfo)\n  if (!trackingInfo) {\n    return null;\n  }\n\n  const { data } = trackingInfo;\n\n  if (!data || data.length === 0) {\n    return <p>No tracking information found for this number.</p>;\n  }\n\n  const trackingDetails = data[0];\n\n  return (\n    <div>\n      <ul>\n        <li><p>Статус доставки: {trackingDetails.Status}</p></li>\n        <li><p>Відправлено: {trackingDetails.CitySender}, {trackingDetails.WarehouseSender}</p></li>\n        <li><p>Отримано: {trackingDetails.CityRecipient}, {trackingDetails.WarehouseRecipient}</p></li>\n      </ul>\n    </div>\n  );\n};\n\nexport default TrackingResults;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport TrackingForm from 'components/TrackingForm/TrackingForm';\nimport TrackingResults from 'components/TrackingResults/TrackingResults';\nimport Header from 'components/Header/Header';\n\nconst MainPage = () => {\n  const [trackingInfo, setTrackingInfo] = useState(null);\n\n  const handleTrackingInfoReceived = (info) => {\n    setTrackingInfo(info);\n  };\n  return (\n    <>\n      <Header />\n      <main>\n      <h1>New Post Tracking</h1>\n      <Link to=\"/SecondPage\">to SecondPage</Link>\n        <TrackingForm onTrackingInfoReceived={handleTrackingInfoReceived} />\n        <TrackingResults trackingInfo={trackingInfo} />\n      </main>\n    </>\n  );\n};\n\n\n\nexport default MainPage;"],"names":["className","s","getTrackingInfo","trackingNumber","axios","apiKey","modelName","calledMethod","methodProperties","Documents","DocumentNumber","Phone","response","data","console","error","history","onClearHistory","onHistoryItemClick","length","onClick","map","item","index","onTrackingInfoReceived","useState","setTrackingNumber","validInput","setValidInput","searchHistory","setSearchHistory","useEffect","storedHistory","localStorage","getItem","JSON","parse","handleTrackingNumberChange","event","numericValue","target","value","replace","handleSubmit","e","preventDefault","trackingInfo","newHistory","Set","setItem","stringify","onSubmit","type","onChange","placeholder","disabled","removeItem","Event","log","trackingDetails","Status","CitySender","WarehouseSender","CityRecipient","WarehouseRecipient","setTrackingInfo","Header","to","info"],"sourceRoot":""}